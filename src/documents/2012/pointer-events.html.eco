---
title: "Pointer-events"
excerpt: "Свойство <code class='key'>pointer-events</code> придет к нам с CSS4-UI модулем, но уже сейчас поддерживается более чем половиной браузеров. Если установить <code><span class='key'>pointer-events</span>: <span class='value'>none</span></code>, то элемент перестанет реагировать на hover, click и другие события мыши. Он станет «прозрачным» для взаимодействия, а hover и click будут передаваться элементу, лежащему под ним. Рассмотрим, для чего это можно использовать."
description: "Свойство pointer-events придет к нам с CSS4-UI модулем, но уже сейчас поддерживается более чем половиной браузеров. Если установить pointer-events: none, то элемент перестанет реагировать на hover, click и другие события мыши. Он станет «прозрачным» для взаимодействия, а hover и click будут передаваться элементу, лежащему под ним. Рассмотрим, для чего это можно использовать."
created_at: 2012-12-09
kind: article
publish: true
disqusid: pointer-events
starred: true
tags: [css,progressive enhancement]
styles: ['/css/caniuse.css']
scripts: ['/vendor/caniuse.js']
og_image: '/i/og/og-paulradzkov-2012-pointer-events.png'
---

<p>Представим ситуацию, когда у нас один html-элемент расположен поверх другого. Но нам нужно, чтобы нижний элемент был кликабельным или реагировал на hover.</p>

<p>В модуле «CSS4-UI» есть такое свойство — <code><a href="http://wiki.csswg.org/spec/css4-ui#pointer-events">pointer-events</a></code>.</p>

<!-- cut -->

<p><code class="hljs-rule"><span class="hljs-attribute">pointer-events</span>: <span class="hljs-value">none</span></code> — элемент перестанет реагировать на hover, click и другие события мыши. Он станет «прозрачным» для взаимодействия, а hover и click будут передаваться элементу, лежащему под ним.</p>

<p><code class="hljs-rule"><span class="hljs-attribute">pointer-events</span>: <span class="hljs-value">auto</span></code> — (значение по-умолчанию) включает стандартное поведение элемента.</p>

<p>Изначально свойство «pointer-events» было введено для SVG и должно было стать частью CSS3, но было перенесено в спецификацию CSS4. Кроме «none» и «auto» есть <a href="https://developer.mozilla.org/ru/docs/CSS/pointer-events">еще несколько значений</a>, но они применимы только к SVG, и мы не будем их рассматривать.</p>

<p>Несмотря на то, что свойство относится к  CSS4, <a href="http://caniuse.com/pointer-events" title="Где работает pointer-events?">pointer-events поддерживается</a> уже большим количеством браузеров и довольно давно. Не работает в IE ниже 11 версии и в Opera Presto. А значит, его можно осторожно использовать для улучшения юзабилити в рамках прогрессивного улучшения.</p>

<div class="caniuse" data-feature="pointer-events"></div>

<p>Проверить, поддерживается ли это свойство браузером, можно с помощью <a href="https://github.com/ausi/Feature-detection-technique-for-pointer-events" title="Modernizr plugin feature detection for css property 'pointer-events'">специального теста для Modernizer</a>.</p>

<h2>Пример 1</h2>

<p>Рассмотрим на практике.</p>

<figure>
    <p data-height="600" data-theme-id="16915" data-slug-hash="bWLPYM" data-default-tab="result" data-user="paulradzkov" data-embed-version="2" data-pen-title="2012-pointer-events-1" class="codepen">See the Pen <a href="https://codepen.io/paulradzkov/pen/bWLPYM/">2012-pointer-events-1</a> by Paul Radzkov (<a href="http://codepen.io/paulradzkov">@paulradzkov</a>) on <a href="http://codepen.io">CodePen</a>.</p>
    <script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script>
</figure>


<p>В первом примере для белого градиента, накрывающего текст, <code class="hljs-rule"><span class="hljs-attribute">pointer-events</span></code> установлен в none. Текст легко выделяется мышью сквозь градиент. Даже курсор меняет свою форму со стрелки на выделение текста.</p>

<p>Во втором примере <code class="hljs-rule"><span class="hljs-attribute">pointer-events</span></code> не задан, маска градиента не даёт выделить текст, курсор имеет форму стрелки, как для нетекстовых элементов.</p>

<h2>Пример 2</h2>

<p>Задача: сделать так, чтобы ссылка в меню становилась некликабельной, если она ведет на эту же страницу.</p>

<figure>
    <p data-height="300" data-theme-id="16915" data-slug-hash="oWErMY" data-default-tab="result" data-user="paulradzkov" data-embed-version="2" data-pen-title="2012-pointer-events-demo-2" class="codepen ">See the Pen <a href="https://codepen.io/paulradzkov/pen/oWErMY/">2012-pointer-events-demo-2</a> by Paul Radzkov (<a href="http://codepen.io/paulradzkov">@paulradzkov</a>) on <a href="http://codepen.io">CodePen</a>.</p>
<script async src="https://production-assets.codepen.io/assets/embed/ei.js"></script>
</figure>

<p>Обычно в CMS уже есть какой-либо класс для индикации текущей страницы в меню. Допишем ему pointer-events:</p>

<pre><code class="language-css">.demo-menu a.current {
    background: #AAA;
    color: #333;
    pointer-events: none; /* disables click event */
}
</code></pre>

<% %>
